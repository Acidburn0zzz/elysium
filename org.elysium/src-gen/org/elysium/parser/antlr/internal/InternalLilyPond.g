/*
* generated by Xtext
*/
grammar InternalLilyPond;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
	
}

@lexer::header {
package org.elysium.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.elysium.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.elysium.services.LilyPondGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/
 
 	private LilyPondGrammarAccess grammarAccess;
 	
    public InternalLilyPondParser(TokenStream input, LilyPondGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "LilyPond";	
   	}
   	
   	@Override
   	protected LilyPondGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleLilyPond
entryRuleLilyPond returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLilyPondRule()); }
	 iv_ruleLilyPond=ruleLilyPond 
	 { $current=$iv_ruleLilyPond.current; } 
	 EOF 
;

// Rule LilyPond
ruleLilyPond returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getLilyPondAccess().getExpressionsToplevelExpressionParserRuleCall_0()); 
	    }
		lv_expressions_0_0=ruleToplevelExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLilyPondRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_0_0, 
        		"ToplevelExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)*
;





// Entry rule entryRuleToplevelExpression
entryRuleToplevelExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getToplevelExpressionRule()); }
	 iv_ruleToplevelExpression=ruleToplevelExpression 
	 { $current=$iv_ruleToplevelExpression.current; } 
	 EOF 
;

// Rule ToplevelExpression
ruleToplevelExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getToplevelExpressionAccess().getAssignmentParserRuleCall_0()); 
    }
    this_Assignment_0=ruleAssignment
    { 
        $current = $this_Assignment_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getToplevelExpressionAccess().getCommonExpressionParserRuleCall_1()); 
    }
    this_CommonExpression_1=ruleCommonExpression
    { 
        $current = $this_CommonExpression_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current; } 
	 EOF 
;

// Rule Expression
ruleExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getPropertyAssignmentParserRuleCall_0()); 
    }
    this_PropertyAssignment_0=rulePropertyAssignment
    { 
        $current = $this_PropertyAssignment_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getCommonExpressionParserRuleCall_1()); 
    }
    this_CommonExpression_1=ruleCommonExpression
    { 
        $current = $this_CommonExpression_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleCommonExpression
entryRuleCommonExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCommonExpressionRule()); }
	 iv_ruleCommonExpression=ruleCommonExpression 
	 { $current=$iv_ruleCommonExpression.current; } 
	 EOF 
;

// Rule CommonExpression
ruleCommonExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getCommonExpressionAccess().getCommandParserRuleCall_0()); 
    }
    this_Command_0=ruleCommand
    { 
        $current = $this_Command_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getCommonExpressionAccess().getBlockParserRuleCall_1()); 
    }
    this_Block_1=ruleBlock
    { 
        $current = $this_Block_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getCommonExpressionAccess().getSchemeParserRuleCall_2()); 
    }
    this_Scheme_2=ruleScheme
    { 
        $current = $this_Scheme_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getCommonExpressionAccess().getTextParserRuleCall_3()); 
    }
    this_Text_3=ruleText
    { 
        $current = $this_Text_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getCommonExpressionAccess().getNumberParserRuleCall_4()); 
    }
    this_Number_4=ruleNumber
    { 
        $current = $this_Number_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAssignment
entryRuleAssignment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssignmentRule()); }
	 iv_ruleAssignment=ruleAssignment 
	 { $current=$iv_ruleAssignment.current; } 
	 EOF 
;

// Rule Assignment
ruleAssignment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_name_0_1=RULE_ID
		{
			newLeafNode(lv_name_0_1, grammarAccess.getAssignmentAccess().getNameIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssignmentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_1, 
        		"ID");
	    }

    |		lv_name_0_2=RULE_STRING
		{
			newLeafNode(lv_name_0_2, grammarAccess.getAssignmentAccess().getNameSTRINGTerminalRuleCall_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssignmentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_2, 
        		"STRING");
	    }

)

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssignmentAccess().getValueExpressionParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignmentRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePropertyAssignment
entryRulePropertyAssignment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyAssignmentRule()); }
	 iv_rulePropertyAssignment=rulePropertyAssignment 
	 { $current=$iv_rulePropertyAssignment.current; } 
	 EOF 
;

// Rule PropertyAssignment
rulePropertyAssignment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getIdSchemeIdentifierParserRuleCall_0_0()); 
	    }
		lv_id_0_0=ruleSchemeIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyAssignmentRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_0_0, 
        		"SchemeIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPropertyAssignmentAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getValueExpressionParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyAssignmentRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleBlock
entryRuleBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	 iv_ruleBlock=ruleBlock 
	 { $current=$iv_ruleBlock.current; } 
	 EOF 
;

// Rule Block
ruleBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBlockAccess().getSimpleBlockParserRuleCall_0()); 
    }
    this_SimpleBlock_0=ruleSimpleBlock
    { 
        $current = $this_SimpleBlock_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBlockAccess().getSimultaneousBlockParserRuleCall_1()); 
    }
    this_SimultaneousBlock_1=ruleSimultaneousBlock
    { 
        $current = $this_SimultaneousBlock_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSimpleBlock
entryRuleSimpleBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleBlockRule()); }
	 iv_ruleSimpleBlock=ruleSimpleBlock 
	 { $current=$iv_ruleSimpleBlock.current; } 
	 EOF 
;

// Rule SimpleBlock
ruleSimpleBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getSimpleBlockAccess().getSimpleBlockAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSimpleBlockAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleBlockAccess().getExpressionsExpressionParserRuleCall_2_0()); 
	    }
		lv_expressions_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleBlockRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSimpleBlockAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleSimultaneousBlock
entryRuleSimultaneousBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimultaneousBlockRule()); }
	 iv_ruleSimultaneousBlock=ruleSimultaneousBlock 
	 { $current=$iv_ruleSimultaneousBlock.current; } 
	 EOF 
;

// Rule SimultaneousBlock
ruleSimultaneousBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getSimultaneousBlockAccess().getSimultaneousBlockAction_0(),
            $current);
    }
)	otherlv_1='<<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSimultaneousBlockAccess().getLessThanSignLessThanSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSimultaneousBlockAccess().getExpressionsExpressionParserRuleCall_2_0()); 
	    }
		lv_expressions_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimultaneousBlockRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='>>' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSimultaneousBlockAccess().getGreaterThanSignGreaterThanSignKeyword_3());
    }
)
;





// Entry rule entryRuleCommand
entryRuleCommand returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCommandRule()); }
	 iv_ruleCommand=ruleCommand 
	 { $current=$iv_ruleCommand.current; } 
	 EOF 
;

// Rule Command
ruleCommand returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getCommandAccess().getSpecialCommandParserRuleCall_0()); 
    }
    this_SpecialCommand_0=ruleSpecialCommand
    { 
        $current = $this_SpecialCommand_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getCommandAccess().getReferenceParserRuleCall_1()); 
    }
    this_Reference_1=ruleReference
    { 
        $current = $this_Reference_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSpecialCharacter
entryRuleSpecialCharacter returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpecialCharacterRule()); } 
	 iv_ruleSpecialCharacter=ruleSpecialCharacter 
	 { $current=$iv_ruleSpecialCharacter.current.getText(); }  
	 EOF 
;

// Rule SpecialCharacter
ruleSpecialCharacter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='!' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCharacterAccess().getExclamationMarkKeyword_0()); 
    }

    |
	kw='?' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCharacterAccess().getQuestionMarkKeyword_1()); 
    }

    |
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCharacterAccess().getPlusSignKeyword_2()); 
    }

    |
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCharacterAccess().getLessThanSignKeyword_3()); 
    }

    |
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCharacterAccess().getGreaterThanSignKeyword_4()); 
    }

    |
	kw='[' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCharacterAccess().getLeftSquareBracketKeyword_5()); 
    }

    |
	kw=']' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCharacterAccess().getRightSquareBracketKeyword_6()); 
    }

    |
	kw='~' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCharacterAccess().getTildeKeyword_7()); 
    }
)
    ;





// Entry rule entryRuleUnparsedBlock
entryRuleUnparsedBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnparsedBlockRule()); }
	 iv_ruleUnparsedBlock=ruleUnparsedBlock 
	 { $current=$iv_ruleUnparsedBlock.current; } 
	 EOF 
;

// Rule UnparsedBlock
ruleUnparsedBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnparsedBlockAccess().getUnparsedBlockAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUnparsedBlockAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnparsedBlockAccess().getExpressionsUnparsedExpressionParserRuleCall_2_0()); 
	    }
		lv_expressions_2_0=ruleUnparsedExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnparsedBlockRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_2_0, 
        		"UnparsedExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getUnparsedBlockAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleUnparsedExpression
entryRuleUnparsedExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnparsedExpressionRule()); }
	 iv_ruleUnparsedExpression=ruleUnparsedExpression 
	 { $current=$iv_ruleUnparsedExpression.current; } 
	 EOF 
;

// Rule UnparsedExpression
ruleUnparsedExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getUnparsedExpressionAccess().getPropertyAssignmentParserRuleCall_0()); 
    }
    this_PropertyAssignment_0=rulePropertyAssignment
    { 
        $current = $this_PropertyAssignment_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getUnparsedExpressionAccess().getUnparsedCommandParserRuleCall_1()); 
    }
    this_UnparsedCommand_1=ruleUnparsedCommand
    { 
        $current = $this_UnparsedCommand_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getUnparsedExpressionAccess().getUnparsedBlockParserRuleCall_2()); 
    }
    this_UnparsedBlock_2=ruleUnparsedBlock
    { 
        $current = $this_UnparsedBlock_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getUnparsedExpressionAccess().getSchemeParserRuleCall_3()); 
    }
    this_Scheme_3=ruleScheme
    { 
        $current = $this_Scheme_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getUnparsedExpressionAccess().getNumberParserRuleCall_4()); 
    }
    this_Number_4=ruleNumber
    { 
        $current = $this_Number_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getUnparsedExpressionAccess().getTextParserRuleCall_5()); 
    }
    this_Text_5=ruleText
    { 
        $current = $this_Text_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleUnparsedCommand
entryRuleUnparsedCommand returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnparsedCommandRule()); }
	 iv_ruleUnparsedCommand=ruleUnparsedCommand 
	 { $current=$iv_ruleUnparsedCommand.current; } 
	 EOF 
;

// Rule UnparsedCommand
ruleUnparsedCommand returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='\\' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUnparsedCommandAccess().getReverseSolidusKeyword_0());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnparsedCommandAccess().getCommandSchemeIdentifierParserRuleCall_1_0_0()); 
	    }
		lv_command_1_1=ruleSchemeIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnparsedCommandRule());
	        }
       		set(
       			$current, 
       			"command",
        		lv_command_1_1, 
        		"SchemeIdentifier");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getUnparsedCommandAccess().getCommandSpecialCommandNameParserRuleCall_1_0_1()); 
	    }
		lv_command_1_2=ruleSpecialCommandName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnparsedCommandRule());
	        }
       		set(
       			$current, 
       			"command",
        		lv_command_1_2, 
        		"SpecialCommandName");
	        afterParserOrEnumRuleCall();
	    }

)

)
))
;





// Entry rule entryRuleReference
entryRuleReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReferenceRule()); }
	 iv_ruleReference=ruleReference 
	 { $current=$iv_ruleReference.current; } 
	 EOF 
;

// Rule Reference
ruleReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='\\' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getReferenceAccess().getReverseSolidusKeyword_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getReferenceAccess().getAssignmentAssignmentCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleText
entryRuleText returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTextRule()); }
	 iv_ruleText=ruleText 
	 { $current=$iv_ruleText.current; } 
	 EOF 
;

// Rule Text
ruleText returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getTextAccess().getValueSchemeTextValueSegmentParserRuleCall_0_0()); 
	    }
		lv_value_0_1=ruleSchemeTextValueSegment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTextRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_1, 
        		"SchemeTextValueSegment");
	        afterParserOrEnumRuleCall();
	    }

    |		lv_value_0_2=	'(' 
    {
        newLeafNode(lv_value_0_2, grammarAccess.getTextAccess().getValueLeftParenthesisKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTextRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_0_2, null);
	    }

    |		lv_value_0_3=	')' 
    {
        newLeafNode(lv_value_0_3, grammarAccess.getTextAccess().getValueRightParenthesisKeyword_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTextRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_0_3, null);
	    }

    |		lv_value_0_4=	'\'' 
    {
        newLeafNode(lv_value_0_4, grammarAccess.getTextAccess().getValueApostropheKeyword_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTextRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_0_4, null);
	    }

    |		lv_value_0_5=	',' 
    {
        newLeafNode(lv_value_0_5, grammarAccess.getTextAccess().getValueCommaKeyword_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTextRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_0_5, null);
	    }

    |		lv_value_0_6=	':' 
    {
        newLeafNode(lv_value_0_6, grammarAccess.getTextAccess().getValueColonKeyword_0_5());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTextRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_0_6, null);
	    }

)

)
)
;





// Entry rule entryRuleNumber
entryRuleNumber returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumberRule()); }
	 iv_ruleNumber=ruleNumber 
	 { $current=$iv_ruleNumber.current; } 
	 EOF 
;

// Rule Number
ruleNumber returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_INT
		{
			newLeafNode(lv_value_0_0, grammarAccess.getNumberAccess().getValueINTTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumberRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"INT");
	    }

)
)
;





// Entry rule entryRuleSpecialCommand
entryRuleSpecialCommand returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpecialCommandRule()); }
	 iv_ruleSpecialCommand=ruleSpecialCommand 
	 { $current=$iv_ruleSpecialCommand.current; } 
	 EOF 
;

// Rule SpecialCommand
ruleSpecialCommand returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSpecialCommandAccess().getIncludeParserRuleCall_0()); 
    }
    this_Include_0=ruleInclude
    { 
        $current = $this_Include_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSpecialCommandAccess().getVersionParserRuleCall_1()); 
    }
    this_Version_1=ruleVersion
    { 
        $current = $this_Version_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSpecialCommandAccess().getSourceFileNameParserRuleCall_2()); 
    }
    this_SourceFileName_2=ruleSourceFileName
    { 
        $current = $this_SourceFileName_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSpecialCommandAccess().getSourceFileLineParserRuleCall_3()); 
    }
    this_SourceFileLine_3=ruleSourceFileLine
    { 
        $current = $this_SourceFileLine_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSpecialCommandAccess().getMarkupParserRuleCall_4()); 
    }
    this_Markup_4=ruleMarkup
    { 
        $current = $this_Markup_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSpecialCommandAccess().getMarkupLinesParserRuleCall_5()); 
    }
    this_MarkupLines_5=ruleMarkupLines
    { 
        $current = $this_MarkupLines_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSpecialCommandAccess().getBlockCommandParserRuleCall_6()); 
    }
    this_BlockCommand_6=ruleBlockCommand
    { 
        $current = $this_BlockCommand_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSpecialCommandAccess().getOutputDefinitionParserRuleCall_7()); 
    }
    this_OutputDefinition_7=ruleOutputDefinition
    { 
        $current = $this_OutputDefinition_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSpecialCommandAccess().getRelativeMusicParserRuleCall_8()); 
    }
    this_RelativeMusic_8=ruleRelativeMusic
    { 
        $current = $this_RelativeMusic_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSpecialCommandAccess().getTransposedMusicParserRuleCall_9()); 
    }
    this_TransposedMusic_9=ruleTransposedMusic
    { 
        $current = $this_TransposedMusic_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSpecialCommandAccess().getModeChangeParserRuleCall_10()); 
    }
    this_ModeChange_10=ruleModeChange
    { 
        $current = $this_ModeChange_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSpecialCommandAccess().getMusicWithLyricsParserRuleCall_11()); 
    }
    this_MusicWithLyrics_11=ruleMusicWithLyrics
    { 
        $current = $this_MusicWithLyrics_11.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSpecialCommandAccess().getNewContextParserRuleCall_12()); 
    }
    this_NewContext_12=ruleNewContext
    { 
        $current = $this_NewContext_12.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSpecialCommandAccess().getContextDefParserRuleCall_13()); 
    }
    this_ContextDef_13=ruleContextDef
    { 
        $current = $this_ContextDef_13.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSpecialCommandAccess().getOtherParserRuleCall_14()); 
    }
    this_Other_14=ruleOther
    { 
        $current = $this_Other_14.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleInclude
entryRuleInclude returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIncludeRule()); }
	 iv_ruleInclude=ruleInclude 
	 { $current=$iv_ruleInclude.current; } 
	 EOF 
;

// Rule Include
ruleInclude returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='\\' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIncludeAccess().getReverseSolidusKeyword_0());
    }
(
(
		lv_keyword_1_0=	'include' 
    {
        newLeafNode(lv_keyword_1_0, grammarAccess.getIncludeAccess().getKeywordIncludeKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIncludeRule());
	        }
       		setWithLastConsumed($current, "keyword", lv_keyword_1_0, "include");
	    }

)
)(
(
		lv_importURI_2_0=RULE_STRING
		{
			newLeafNode(lv_importURI_2_0, grammarAccess.getIncludeAccess().getImportURISTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIncludeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"importURI",
        		lv_importURI_2_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleVersion
entryRuleVersion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVersionRule()); }
	 iv_ruleVersion=ruleVersion 
	 { $current=$iv_ruleVersion.current; } 
	 EOF 
;

// Rule Version
ruleVersion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='\\' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVersionAccess().getReverseSolidusKeyword_0());
    }
(
(
		lv_keyword_1_0=	'version' 
    {
        newLeafNode(lv_keyword_1_0, grammarAccess.getVersionAccess().getKeywordVersionKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVersionRule());
	        }
       		setWithLastConsumed($current, "keyword", lv_keyword_1_0, "version");
	    }

)
)(
(
		lv_version_2_0=RULE_STRING
		{
			newLeafNode(lv_version_2_0, grammarAccess.getVersionAccess().getVersionSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVersionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"version",
        		lv_version_2_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleSourceFileName
entryRuleSourceFileName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSourceFileNameRule()); }
	 iv_ruleSourceFileName=ruleSourceFileName 
	 { $current=$iv_ruleSourceFileName.current; } 
	 EOF 
;

// Rule SourceFileName
ruleSourceFileName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='\\' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSourceFileNameAccess().getReverseSolidusKeyword_0());
    }
(
(
		lv_keyword_1_0=	'sourcefilename' 
    {
        newLeafNode(lv_keyword_1_0, grammarAccess.getSourceFileNameAccess().getKeywordSourcefilenameKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSourceFileNameRule());
	        }
       		setWithLastConsumed($current, "keyword", lv_keyword_1_0, "sourcefilename");
	    }

)
)(
(
		lv_filename_2_0=RULE_STRING
		{
			newLeafNode(lv_filename_2_0, grammarAccess.getSourceFileNameAccess().getFilenameSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSourceFileNameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"filename",
        		lv_filename_2_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleSourceFileLine
entryRuleSourceFileLine returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSourceFileLineRule()); }
	 iv_ruleSourceFileLine=ruleSourceFileLine 
	 { $current=$iv_ruleSourceFileLine.current; } 
	 EOF 
;

// Rule SourceFileLine
ruleSourceFileLine returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='\\' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSourceFileLineAccess().getReverseSolidusKeyword_0());
    }
(
(
		lv_keyword_1_0=	'sourcefileline' 
    {
        newLeafNode(lv_keyword_1_0, grammarAccess.getSourceFileLineAccess().getKeywordSourcefilelineKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSourceFileLineRule());
	        }
       		setWithLastConsumed($current, "keyword", lv_keyword_1_0, "sourcefileline");
	    }

)
)(
(
		lv_line_2_0=RULE_INT
		{
			newLeafNode(lv_line_2_0, grammarAccess.getSourceFileLineAccess().getLineINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSourceFileLineRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"line",
        		lv_line_2_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRuleMarkup
entryRuleMarkup returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMarkupRule()); }
	 iv_ruleMarkup=ruleMarkup 
	 { $current=$iv_ruleMarkup.current; } 
	 EOF 
;

// Rule Markup
ruleMarkup returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='\\' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMarkupAccess().getReverseSolidusKeyword_0());
    }
(
(
		lv_keyword_1_0=	'markup' 
    {
        newLeafNode(lv_keyword_1_0, grammarAccess.getMarkupAccess().getKeywordMarkupKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMarkupRule());
	        }
       		setWithLastConsumed($current, "keyword", lv_keyword_1_0, "markup");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMarkupAccess().getBodyMarkupBodyParserRuleCall_2_0()); 
	    }
		lv_body_2_0=ruleMarkupBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMarkupRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_2_0, 
        		"MarkupBody");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMarkupLines
entryRuleMarkupLines returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMarkupLinesRule()); }
	 iv_ruleMarkupLines=ruleMarkupLines 
	 { $current=$iv_ruleMarkupLines.current; } 
	 EOF 
;

// Rule MarkupLines
ruleMarkupLines returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='\\' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMarkupLinesAccess().getReverseSolidusKeyword_0());
    }
(
(
		lv_keyword_1_0=	'markuplines' 
    {
        newLeafNode(lv_keyword_1_0, grammarAccess.getMarkupLinesAccess().getKeywordMarkuplinesKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMarkupLinesRule());
	        }
       		setWithLastConsumed($current, "keyword", lv_keyword_1_0, "markuplines");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMarkupLinesAccess().getBodyMarkupBodyParserRuleCall_2_0()); 
	    }
		lv_body_2_0=ruleMarkupBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMarkupLinesRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_2_0, 
        		"MarkupBody");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMarkupBody
entryRuleMarkupBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMarkupBodyRule()); }
	 iv_ruleMarkupBody=ruleMarkupBody 
	 { $current=$iv_ruleMarkupBody.current; } 
	 EOF 
;

// Rule MarkupBody
ruleMarkupBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMarkupBodyAccess().getMarkupBodyAction_0(),
            $current);
    }
)(
(
(
		{ 
	        newCompositeNode(grammarAccess.getMarkupBodyAccess().getCommandSchemeParserRuleCall_1_0_0()); 
	    }
		lv_command_1_1=ruleScheme		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMarkupBodyRule());
	        }
       		add(
       			$current, 
       			"command",
        		lv_command_1_1, 
        		"Scheme");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getMarkupBodyAccess().getCommandUnparsedCommandParserRuleCall_1_0_1()); 
	    }
		lv_command_1_2=ruleUnparsedCommand		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMarkupBodyRule());
	        }
       		add(
       			$current, 
       			"command",
        		lv_command_1_2, 
        		"UnparsedCommand");
	        afterParserOrEnumRuleCall();
	    }

)

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMarkupBodyAccess().getBlockUnparsedBlockParserRuleCall_2_0()); 
	    }
		lv_block_2_0=ruleUnparsedBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMarkupBodyRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_2_0, 
        		"UnparsedBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleBlockCommand
entryRuleBlockCommand returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBlockCommandRule()); }
	 iv_ruleBlockCommand=ruleBlockCommand 
	 { $current=$iv_ruleBlockCommand.current; } 
	 EOF 
;

// Rule BlockCommand
ruleBlockCommand returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='\\' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBlockCommandAccess().getReverseSolidusKeyword_0());
    }
(
(
(
		lv_keyword_1_1=	'book' 
    {
        newLeafNode(lv_keyword_1_1, grammarAccess.getBlockCommandAccess().getKeywordBookKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBlockCommandRule());
	        }
       		setWithLastConsumed($current, "keyword", lv_keyword_1_1, null);
	    }

    |		lv_keyword_1_2=	'bookpart' 
    {
        newLeafNode(lv_keyword_1_2, grammarAccess.getBlockCommandAccess().getKeywordBookpartKeyword_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBlockCommandRule());
	        }
       		setWithLastConsumed($current, "keyword", lv_keyword_1_2, null);
	    }

    |		lv_keyword_1_3=	'header' 
    {
        newLeafNode(lv_keyword_1_3, grammarAccess.getBlockCommandAccess().getKeywordHeaderKeyword_1_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBlockCommandRule());
	        }
       		setWithLastConsumed($current, "keyword", lv_keyword_1_3, null);
	    }

    |		lv_keyword_1_4=	'score' 
    {
        newLeafNode(lv_keyword_1_4, grammarAccess.getBlockCommandAccess().getKeywordScoreKeyword_1_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBlockCommandRule());
	        }
       		setWithLastConsumed($current, "keyword", lv_keyword_1_4, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBlockCommandAccess().getBlockSimpleBlockParserRuleCall_2_0()); 
	    }
		lv_block_2_0=ruleSimpleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBlockCommandRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_2_0, 
        		"SimpleBlock");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleOutputDefinition
entryRuleOutputDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOutputDefinitionRule()); }
	 iv_ruleOutputDefinition=ruleOutputDefinition 
	 { $current=$iv_ruleOutputDefinition.current; } 
	 EOF 
;

// Rule OutputDefinition
ruleOutputDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='\\' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOutputDefinitionAccess().getReverseSolidusKeyword_0());
    }
(
(
(
		lv_keyword_1_1=	'paper' 
    {
        newLeafNode(lv_keyword_1_1, grammarAccess.getOutputDefinitionAccess().getKeywordPaperKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputDefinitionRule());
	        }
       		setWithLastConsumed($current, "keyword", lv_keyword_1_1, null);
	    }

    |		lv_keyword_1_2=	'midi' 
    {
        newLeafNode(lv_keyword_1_2, grammarAccess.getOutputDefinitionAccess().getKeywordMidiKeyword_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputDefinitionRule());
	        }
       		setWithLastConsumed($current, "keyword", lv_keyword_1_2, null);
	    }

    |		lv_keyword_1_3=	'layout' 
    {
        newLeafNode(lv_keyword_1_3, grammarAccess.getOutputDefinitionAccess().getKeywordLayoutKeyword_1_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputDefinitionRule());
	        }
       		setWithLastConsumed($current, "keyword", lv_keyword_1_3, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOutputDefinitionAccess().getBlockUnparsedBlockParserRuleCall_2_0()); 
	    }
		lv_block_2_0=ruleUnparsedBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputDefinitionRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_2_0, 
        		"UnparsedBlock");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRelativeMusic
entryRuleRelativeMusic returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelativeMusicRule()); }
	 iv_ruleRelativeMusic=ruleRelativeMusic 
	 { $current=$iv_ruleRelativeMusic.current; } 
	 EOF 
;

// Rule RelativeMusic
ruleRelativeMusic returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='\\' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRelativeMusicAccess().getReverseSolidusKeyword_0());
    }
(
(
		lv_keyword_1_0=	'relative' 
    {
        newLeafNode(lv_keyword_1_0, grammarAccess.getRelativeMusicAccess().getKeywordRelativeKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelativeMusicRule());
	        }
       		setWithLastConsumed($current, "keyword", lv_keyword_1_0, "relative");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRelativeMusicAccess().getPitchPitchParserRuleCall_2_0()); 
	    }
		lv_pitch_2_0=rulePitch		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelativeMusicRule());
	        }
       		set(
       			$current, 
       			"pitch",
        		lv_pitch_2_0, 
        		"Pitch");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getRelativeMusicAccess().getMusicExpressionParserRuleCall_3_0()); 
	    }
		lv_music_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelativeMusicRule());
	        }
       		set(
       			$current, 
       			"music",
        		lv_music_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePitch
entryRulePitch returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPitchRule()); }
	 iv_rulePitch=rulePitch 
	 { $current=$iv_rulePitch.current; } 
	 EOF 
;

// Rule Pitch
rulePitch returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_base_0_0=RULE_ID
		{
			newLeafNode(lv_base_0_0, grammarAccess.getPitchAccess().getBaseIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPitchRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"base",
        		lv_base_0_0, 
        		"ID");
	    }

)
)(
(
		lv_octaveCheck_1_0=	'=' 
    {
        newLeafNode(lv_octaveCheck_1_0, grammarAccess.getPitchAccess().getOctaveCheckEqualsSignKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPitchRule());
	        }
       		setWithLastConsumed($current, "octaveCheck", true, "=");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getPitchAccess().getOctaveShiftOctaveParserRuleCall_2_0()); 
	    }
		lv_octaveShift_2_0=ruleOctave		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPitchRule());
	        }
       		set(
       			$current, 
       			"octaveShift",
        		lv_octaveShift_2_0, 
        		"Octave");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_reminderAccidental_3_0=	'!' 
    {
        newLeafNode(lv_reminderAccidental_3_0, grammarAccess.getPitchAccess().getReminderAccidentalExclamationMarkKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPitchRule());
	        }
       		setWithLastConsumed($current, "reminderAccidental", true, "!");
	    }

)
)?(
(
		lv_cautionaryAccidental_4_0=	'?' 
    {
        newLeafNode(lv_cautionaryAccidental_4_0, grammarAccess.getPitchAccess().getCautionaryAccidentalQuestionMarkKeyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPitchRule());
	        }
       		setWithLastConsumed($current, "cautionaryAccidental", true, "?");
	    }

)
)?)
;





// Entry rule entryRuleOctave
entryRuleOctave returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOctaveRule()); }
	 iv_ruleOctave=ruleOctave 
	 { $current=$iv_ruleOctave.current; } 
	 EOF 
;

// Rule Octave
ruleOctave returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_up_0_0=	'\'' 
    {
        newLeafNode(lv_up_0_0, grammarAccess.getOctaveAccess().getUpApostropheKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOctaveRule());
	        }
       		addWithLastConsumed($current, "up", lv_up_0_0, "\'");
	    }

)
)+
    |(
(
		lv_down_1_0=	',' 
    {
        newLeafNode(lv_down_1_0, grammarAccess.getOctaveAccess().getDownCommaKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOctaveRule());
	        }
       		addWithLastConsumed($current, "down", lv_down_1_0, ",");
	    }

)
)+)
;





// Entry rule entryRuleTransposedMusic
entryRuleTransposedMusic returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTransposedMusicRule()); }
	 iv_ruleTransposedMusic=ruleTransposedMusic 
	 { $current=$iv_ruleTransposedMusic.current; } 
	 EOF 
;

// Rule TransposedMusic
ruleTransposedMusic returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='\\' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTransposedMusicAccess().getReverseSolidusKeyword_0());
    }
(
(
		lv_keyword_1_0=	'transpose' 
    {
        newLeafNode(lv_keyword_1_0, grammarAccess.getTransposedMusicAccess().getKeywordTransposeKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransposedMusicRule());
	        }
       		setWithLastConsumed($current, "keyword", lv_keyword_1_0, "transpose");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTransposedMusicAccess().getSourcePitchParserRuleCall_2_0()); 
	    }
		lv_source_2_0=rulePitch		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTransposedMusicRule());
	        }
       		set(
       			$current, 
       			"source",
        		lv_source_2_0, 
        		"Pitch");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTransposedMusicAccess().getTargetPitchParserRuleCall_3_0()); 
	    }
		lv_target_3_0=rulePitch		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTransposedMusicRule());
	        }
       		set(
       			$current, 
       			"target",
        		lv_target_3_0, 
        		"Pitch");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTransposedMusicAccess().getMusicExpressionParserRuleCall_4_0()); 
	    }
		lv_music_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTransposedMusicRule());
	        }
       		set(
       			$current, 
       			"music",
        		lv_music_4_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleModeChange
entryRuleModeChange returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModeChangeRule()); }
	 iv_ruleModeChange=ruleModeChange 
	 { $current=$iv_ruleModeChange.current; } 
	 EOF 
;

// Rule ModeChange
ruleModeChange returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='\\' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModeChangeAccess().getReverseSolidusKeyword_0());
    }
(
(
(
		lv_keyword_1_1=	'chordmode' 
    {
        newLeafNode(lv_keyword_1_1, grammarAccess.getModeChangeAccess().getKeywordChordmodeKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModeChangeRule());
	        }
       		setWithLastConsumed($current, "keyword", lv_keyword_1_1, null);
	    }

    |		lv_keyword_1_2=	'drummode' 
    {
        newLeafNode(lv_keyword_1_2, grammarAccess.getModeChangeAccess().getKeywordDrummodeKeyword_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModeChangeRule());
	        }
       		setWithLastConsumed($current, "keyword", lv_keyword_1_2, null);
	    }

    |		lv_keyword_1_3=	'figuremode' 
    {
        newLeafNode(lv_keyword_1_3, grammarAccess.getModeChangeAccess().getKeywordFiguremodeKeyword_1_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModeChangeRule());
	        }
       		setWithLastConsumed($current, "keyword", lv_keyword_1_3, null);
	    }

    |		lv_keyword_1_4=	'lyricmode' 
    {
        newLeafNode(lv_keyword_1_4, grammarAccess.getModeChangeAccess().getKeywordLyricmodeKeyword_1_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModeChangeRule());
	        }
       		setWithLastConsumed($current, "keyword", lv_keyword_1_4, null);
	    }

    |		lv_keyword_1_5=	'notemode' 
    {
        newLeafNode(lv_keyword_1_5, grammarAccess.getModeChangeAccess().getKeywordNotemodeKeyword_1_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModeChangeRule());
	        }
       		setWithLastConsumed($current, "keyword", lv_keyword_1_5, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModeChangeAccess().getMusicBlockParserRuleCall_2_0()); 
	    }
		lv_music_2_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModeChangeRule());
	        }
       		set(
       			$current, 
       			"music",
        		lv_music_2_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMusicWithLyrics
entryRuleMusicWithLyrics returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMusicWithLyricsRule()); }
	 iv_ruleMusicWithLyrics=ruleMusicWithLyrics 
	 { $current=$iv_ruleMusicWithLyrics.current; } 
	 EOF 
;

// Rule MusicWithLyrics
ruleMusicWithLyrics returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='\\' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMusicWithLyricsAccess().getReverseSolidusKeyword_0());
    }
(
(
		lv_keyword_1_0=	'lyricsto' 
    {
        newLeafNode(lv_keyword_1_0, grammarAccess.getMusicWithLyricsAccess().getKeywordLyricstoKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMusicWithLyricsRule());
	        }
       		setWithLastConsumed($current, "keyword", lv_keyword_1_0, "lyricsto");
	    }

)
)(
(
(
		lv_id_2_1=RULE_ID
		{
			newLeafNode(lv_id_2_1, grammarAccess.getMusicWithLyricsAccess().getIdIDTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMusicWithLyricsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_2_1, 
        		"ID");
	    }

    |		lv_id_2_2=RULE_STRING
		{
			newLeafNode(lv_id_2_2, grammarAccess.getMusicWithLyricsAccess().getIdSTRINGTerminalRuleCall_2_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMusicWithLyricsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_2_2, 
        		"STRING");
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMusicWithLyricsAccess().getLyricsExpressionParserRuleCall_3_0()); 
	    }
		lv_lyrics_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMusicWithLyricsRule());
	        }
       		set(
       			$current, 
       			"lyrics",
        		lv_lyrics_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleNewContext
entryRuleNewContext returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNewContextRule()); }
	 iv_ruleNewContext=ruleNewContext 
	 { $current=$iv_ruleNewContext.current; } 
	 EOF 
;

// Rule NewContext
ruleNewContext returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='\\' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNewContextAccess().getReverseSolidusKeyword_0());
    }
(
(
(
		lv_keyword_1_1=	'new' 
    {
        newLeafNode(lv_keyword_1_1, grammarAccess.getNewContextAccess().getKeywordNewKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNewContextRule());
	        }
       		setWithLastConsumed($current, "keyword", lv_keyword_1_1, null);
	    }

    |		lv_keyword_1_2=	'context' 
    {
        newLeafNode(lv_keyword_1_2, grammarAccess.getNewContextAccess().getKeywordContextKeyword_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNewContextRule());
	        }
       		setWithLastConsumed($current, "keyword", lv_keyword_1_2, null);
	    }

)

)
)(
(
		lv_context_2_0=RULE_ID
		{
			newLeafNode(lv_context_2_0, grammarAccess.getNewContextAccess().getContextIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNewContextRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"context",
        		lv_context_2_0, 
        		"ID");
	    }

)
)(	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getNewContextAccess().getEqualsSignKeyword_3_0());
    }
(
(
(
		lv_id_4_1=RULE_ID
		{
			newLeafNode(lv_id_4_1, grammarAccess.getNewContextAccess().getIdIDTerminalRuleCall_3_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNewContextRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_4_1, 
        		"ID");
	    }

    |		lv_id_4_2=RULE_STRING
		{
			newLeafNode(lv_id_4_2, grammarAccess.getNewContextAccess().getIdSTRINGTerminalRuleCall_3_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNewContextRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_4_2, 
        		"STRING");
	    }

)

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getNewContextAccess().getModificationContextModificationParserRuleCall_4_0()); 
	    }
		lv_modification_5_0=ruleContextModification		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNewContextRule());
	        }
       		set(
       			$current, 
       			"modification",
        		lv_modification_5_0, 
        		"ContextModification");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getNewContextAccess().getMusicExpressionParserRuleCall_5_0()); 
	    }
		lv_music_6_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNewContextRule());
	        }
       		set(
       			$current, 
       			"music",
        		lv_music_6_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleContextModification
entryRuleContextModification returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getContextModificationRule()); }
	 iv_ruleContextModification=ruleContextModification 
	 { $current=$iv_ruleContextModification.current; } 
	 EOF 
;

// Rule ContextModification
ruleContextModification returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='\\' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getContextModificationAccess().getReverseSolidusKeyword_0());
    }
	otherlv_1='with' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getContextModificationAccess().getWithKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContextModificationAccess().getBlockUnparsedBlockParserRuleCall_2_0()); 
	    }
		lv_block_2_0=ruleUnparsedBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContextModificationRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_2_0, 
        		"UnparsedBlock");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleContextDef
entryRuleContextDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getContextDefRule()); }
	 iv_ruleContextDef=ruleContextDef 
	 { $current=$iv_ruleContextDef.current; } 
	 EOF 
;

// Rule ContextDef
ruleContextDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='\\' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getContextDefAccess().getReverseSolidusKeyword_0());
    }
(
(
		lv_keyword_1_0=	'context' 
    {
        newLeafNode(lv_keyword_1_0, grammarAccess.getContextDefAccess().getKeywordContextKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getContextDefRule());
	        }
       		setWithLastConsumed($current, "keyword", lv_keyword_1_0, "context");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getContextDefAccess().getBlockUnparsedBlockParserRuleCall_2_0()); 
	    }
		lv_block_2_0=ruleUnparsedBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContextDefRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_2_0, 
        		"UnparsedBlock");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleOther
entryRuleOther returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOtherRule()); }
	 iv_ruleOther=ruleOther 
	 { $current=$iv_ruleOther.current; } 
	 EOF 
;

// Rule Other
ruleOther returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='\\' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOtherAccess().getReverseSolidusKeyword_0());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getOtherAccess().getKeywordSpecialCharacterParserRuleCall_1_0_0()); 
	    }
		lv_keyword_1_1=ruleSpecialCharacter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOtherRule());
	        }
       		set(
       			$current, 
       			"keyword",
        		lv_keyword_1_1, 
        		"SpecialCharacter");
	        afterParserOrEnumRuleCall();
	    }

    |		lv_keyword_1_2=	'(' 
    {
        newLeafNode(lv_keyword_1_2, grammarAccess.getOtherAccess().getKeywordLeftParenthesisKeyword_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOtherRule());
	        }
       		setWithLastConsumed($current, "keyword", lv_keyword_1_2, null);
	    }

    |		lv_keyword_1_3=	')' 
    {
        newLeafNode(lv_keyword_1_3, grammarAccess.getOtherAccess().getKeywordRightParenthesisKeyword_1_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOtherRule());
	        }
       		setWithLastConsumed($current, "keyword", lv_keyword_1_3, null);
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getOtherAccess().getKeywordOtherNameParserRuleCall_1_0_3()); 
	    }
		lv_keyword_1_4=ruleOtherName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOtherRule());
	        }
       		set(
       			$current, 
       			"keyword",
        		lv_keyword_1_4, 
        		"OtherName");
	        afterParserOrEnumRuleCall();
	    }

)

)
))
;





// Entry rule entryRuleOtherName
entryRuleOtherName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOtherNameRule()); } 
	 iv_ruleOtherName=ruleOtherName 
	 { $current=$iv_ruleOtherName.current.getText(); }  
	 EOF 
;

// Rule OtherName
ruleOtherName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='accepts' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getAcceptsKeyword_0()); 
    }

    |
	kw='addlyrics' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getAddlyricsKeyword_1()); 
    }

    |
	kw='alias' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getAliasKeyword_2()); 
    }

    |
	kw='alternative' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getAlternativeKeyword_3()); 
    }

    |
	kw='change' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getChangeKeyword_4()); 
    }

    |
	kw='chords' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getChordsKeyword_5()); 
    }

    |
	kw='consists' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getConsistsKeyword_6()); 
    }

    |
	kw='default' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getDefaultKeyword_7()); 
    }

    |
	kw='defaultchild' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getDefaultchildKeyword_8()); 
    }

    |
	kw='denies' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getDeniesKeyword_9()); 
    }

    |
	kw='description' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getDescriptionKeyword_10()); 
    }

    |
	kw='drums' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getDrumsKeyword_11()); 
    }

    |
	kw='figures' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getFiguresKeyword_12()); 
    }

    |
	kw='grobdescriptions' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getGrobdescriptionsKeyword_13()); 
    }

    |
	kw='key' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getKeyKeyword_14()); 
    }

    |
	kw='lyrics' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getLyricsKeyword_15()); 
    }

    |
	kw='maininput' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getMaininputKeyword_16()); 
    }

    |
	kw='mark' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getMarkKeyword_17()); 
    }

    |
	kw='name' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getNameKeyword_18()); 
    }

    |
	kw='objectid' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getObjectidKeyword_19()); 
    }

    |
	kw='octave' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getOctaveKeyword_20()); 
    }

    |
	kw='once' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getOnceKeyword_21()); 
    }

    |
	kw='override' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getOverrideKeyword_22()); 
    }

    |
	kw='partial' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getPartialKeyword_23()); 
    }

    |
	kw='remove' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getRemoveKeyword_24()); 
    }

    |
	kw='repeat' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getRepeatKeyword_25()); 
    }

    |
	kw='rest' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getRestKeyword_26()); 
    }

    |
	kw='revert' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getRevertKeyword_27()); 
    }

    |
	kw='sequential' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getSequentialKeyword_28()); 
    }

    |
	kw='set' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getSetKeyword_29()); 
    }

    |
	kw='simultaneous' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getSimultaneousKeyword_30()); 
    }

    |
	kw='skip' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getSkipKeyword_31()); 
    }

    |
	kw='tempo' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getTempoKeyword_32()); 
    }

    |
	kw='time' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getTimeKeyword_33()); 
    }

    |
	kw='times' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getTimesKeyword_34()); 
    }

    |
	kw='type' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getTypeKeyword_35()); 
    }

    |
	kw='unset' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getUnsetKeyword_36()); 
    }

    |
	kw='with' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOtherNameAccess().getWithKeyword_37()); 
    }
)
    ;





// Entry rule entryRuleSpecialCommandName
entryRuleSpecialCommandName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpecialCommandNameRule()); } 
	 iv_ruleSpecialCommandName=ruleSpecialCommandName 
	 { $current=$iv_ruleSpecialCommandName.current.getText(); }  
	 EOF 
;

// Rule SpecialCommandName
ruleSpecialCommandName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='include' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCommandNameAccess().getIncludeKeyword_0()); 
    }

    |
	kw='version' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCommandNameAccess().getVersionKeyword_1()); 
    }

    |
	kw='sourcefilename' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCommandNameAccess().getSourcefilenameKeyword_2()); 
    }

    |
	kw='sourcefileline' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCommandNameAccess().getSourcefilelineKeyword_3()); 
    }

    |
	kw='markup' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCommandNameAccess().getMarkupKeyword_4()); 
    }

    |
	kw='markuplines' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCommandNameAccess().getMarkuplinesKeyword_5()); 
    }

    |
	kw='book' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCommandNameAccess().getBookKeyword_6()); 
    }

    |
	kw='bookpart' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCommandNameAccess().getBookpartKeyword_7()); 
    }

    |
	kw='context' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCommandNameAccess().getContextKeyword_8()); 
    }

    |
	kw='header' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCommandNameAccess().getHeaderKeyword_9()); 
    }

    |
	kw='score' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCommandNameAccess().getScoreKeyword_10()); 
    }

    |
	kw='paper' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCommandNameAccess().getPaperKeyword_11()); 
    }

    |
	kw='midi' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCommandNameAccess().getMidiKeyword_12()); 
    }

    |
	kw='layout' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCommandNameAccess().getLayoutKeyword_13()); 
    }

    |
	kw='relative' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCommandNameAccess().getRelativeKeyword_14()); 
    }

    |
	kw='transpose' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCommandNameAccess().getTransposeKeyword_15()); 
    }

    |
	kw='chordmode' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCommandNameAccess().getChordmodeKeyword_16()); 
    }

    |
	kw='drummode' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCommandNameAccess().getDrummodeKeyword_17()); 
    }

    |
	kw='figuremode' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCommandNameAccess().getFiguremodeKeyword_18()); 
    }

    |
	kw='lyricmode' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCommandNameAccess().getLyricmodeKeyword_19()); 
    }

    |
	kw='notemode' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCommandNameAccess().getNotemodeKeyword_20()); 
    }

    |
	kw='lyricsto' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCommandNameAccess().getLyricstoKeyword_21()); 
    }

    |
	kw='new' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCommandNameAccess().getNewKeyword_22()); 
    }

    |
	kw='with' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCommandNameAccess().getWithKeyword_23()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getSpecialCommandNameAccess().getOtherNameParserRuleCall_24()); 
    }
    this_OtherName_24=ruleOtherName    {
		$current.merge(this_OtherName_24);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleScheme
entryRuleScheme returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SCHEME_SL_COMMENT", "RULE_SCHEME_ML_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getSchemeRule()); }
	 iv_ruleScheme=ruleScheme 
	 { $current=$iv_ruleScheme.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Scheme
ruleScheme returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SCHEME_SL_COMMENT", "RULE_SCHEME_ML_COMMENT");
    }
    @after { leaveRule(); }:
((	otherlv_0='#' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSchemeAccess().getNumberSignKeyword_0_0());
    }

    |	otherlv_1='$' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSchemeAccess().getDollarSignKeyword_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSchemeAccess().getValueSchemeExpressionParserRuleCall_1_0()); 
	    }
		lv_value_2_0=ruleSchemeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchemeRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"SchemeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleSchemeExpression
entryRuleSchemeExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSchemeExpressionRule()); }
	 iv_ruleSchemeExpression=ruleSchemeExpression 
	 { $current=$iv_ruleSchemeExpression.current; } 
	 EOF 
;

// Rule SchemeExpression
ruleSchemeExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_reference_0_0=	'$' 
    {
        newLeafNode(lv_reference_0_0, grammarAccess.getSchemeExpressionAccess().getReferenceDollarSignKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSchemeExpressionRule());
	        }
       		setWithLastConsumed($current, "reference", true, "$");
	    }

)
)?(
(
(
		lv_quotations_1_1=	'\'' 
    {
        newLeafNode(lv_quotations_1_1, grammarAccess.getSchemeExpressionAccess().getQuotationsApostropheKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSchemeExpressionRule());
	        }
       		addWithLastConsumed($current, "quotations", lv_quotations_1_1, null);
	    }

    |		lv_quotations_1_2=	'`' 
    {
        newLeafNode(lv_quotations_1_2, grammarAccess.getSchemeExpressionAccess().getQuotationsGraveAccentKeyword_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSchemeExpressionRule());
	        }
       		addWithLastConsumed($current, "quotations", lv_quotations_1_2, null);
	    }

    |		lv_quotations_1_3=	',' 
    {
        newLeafNode(lv_quotations_1_3, grammarAccess.getSchemeExpressionAccess().getQuotationsCommaKeyword_1_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSchemeExpressionRule());
	        }
       		addWithLastConsumed($current, "quotations", lv_quotations_1_3, null);
	    }

    |		lv_quotations_1_4=	'@' 
    {
        newLeafNode(lv_quotations_1_4, grammarAccess.getSchemeExpressionAccess().getQuotationsCommercialAtKeyword_1_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSchemeExpressionRule());
	        }
       		addWithLastConsumed($current, "quotations", lv_quotations_1_4, null);
	    }

)

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getSchemeExpressionAccess().getValueSchemeValueParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleSchemeValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchemeExpressionRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"SchemeValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSchemeValue
entryRuleSchemeValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSchemeValueRule()); }
	 iv_ruleSchemeValue=ruleSchemeValue 
	 { $current=$iv_ruleSchemeValue.current; } 
	 EOF 
;

// Rule SchemeValue
ruleSchemeValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSchemeValueAccess().getSchemeBooleanParserRuleCall_0()); 
    }
    this_SchemeBoolean_0=ruleSchemeBoolean
    { 
        $current = $this_SchemeBoolean_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSchemeValueAccess().getSchemeListParserRuleCall_1()); 
    }
    this_SchemeList_1=ruleSchemeList
    { 
        $current = $this_SchemeList_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSchemeValueAccess().getSchemeBlockParserRuleCall_2()); 
    }
    this_SchemeBlock_2=ruleSchemeBlock
    { 
        $current = $this_SchemeBlock_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSchemeValueAccess().getSchemeCharacterParserRuleCall_3()); 
    }
    this_SchemeCharacter_3=ruleSchemeCharacter
    { 
        $current = $this_SchemeCharacter_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSchemeValueAccess().getSchemeNumberParserRuleCall_4()); 
    }
    this_SchemeNumber_4=ruleSchemeNumber
    { 
        $current = $this_SchemeNumber_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSchemeValueAccess().getSchemeTextParserRuleCall_5()); 
    }
    this_SchemeText_5=ruleSchemeText
    { 
        $current = $this_SchemeText_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSchemeValueAccess().getSchemeMarkupCommandParserRuleCall_6()); 
    }
    this_SchemeMarkupCommand_6=ruleSchemeMarkupCommand
    { 
        $current = $this_SchemeMarkupCommand_6.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSchemeBoolean
entryRuleSchemeBoolean returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSchemeBooleanRule()); }
	 iv_ruleSchemeBoolean=ruleSchemeBoolean 
	 { $current=$iv_ruleSchemeBoolean.current; } 
	 EOF 
;

// Rule SchemeBoolean
ruleSchemeBoolean returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getSchemeBooleanAccess().getValueSchemeBooleanValueParserRuleCall_0()); 
	    }
		lv_value_0_0=ruleSchemeBooleanValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchemeBooleanRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"SchemeBooleanValue");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleSchemeBooleanValue
entryRuleSchemeBooleanValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSchemeBooleanValueRule()); } 
	 iv_ruleSchemeBooleanValue=ruleSchemeBooleanValue 
	 { $current=$iv_ruleSchemeBooleanValue.current.getText(); }  
	 EOF 
;

// Rule SchemeBooleanValue
ruleSchemeBooleanValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='#' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSchemeBooleanValueAccess().getNumberSignKeyword_0()); 
    }
    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getSchemeBooleanValueAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleSchemeList
entryRuleSchemeList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSchemeListRule()); }
	 iv_ruleSchemeList=ruleSchemeList 
	 { $current=$iv_ruleSchemeList.current; } 
	 EOF 
;

// Rule SchemeList
ruleSchemeList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getSchemeListAccess().getSchemeListAction_0(),
            $current);
    }
)(
(
		lv_vector_1_0=	'#' 
    {
        newLeafNode(lv_vector_1_0, grammarAccess.getSchemeListAccess().getVectorNumberSignKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSchemeListRule());
	        }
       		setWithLastConsumed($current, "vector", true, "#");
	    }

)
)?	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSchemeListAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSchemeListAccess().getExpressionsSchemeExpressionParserRuleCall_3_0()); 
	    }
		lv_expressions_3_0=ruleSchemeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchemeListRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_3_0, 
        		"SchemeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSchemeListAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleSchemeBlock
entryRuleSchemeBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSchemeBlockRule()); }
	 iv_ruleSchemeBlock=ruleSchemeBlock 
	 { $current=$iv_ruleSchemeBlock.current; } 
	 EOF 
;

// Rule SchemeBlock
ruleSchemeBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSchemeBlockAccess().getNumberSignLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSchemeBlockAccess().getElementsExpressionParserRuleCall_1_0()); 
	    }
		lv_elements_1_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchemeBlockRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_1_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_2='#}' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSchemeBlockAccess().getNumberSignRightCurlyBracketKeyword_2());
    }
)
;





// Entry rule entryRuleSchemeCharacter
entryRuleSchemeCharacter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSchemeCharacterRule()); }
	 iv_ruleSchemeCharacter=ruleSchemeCharacter 
	 { $current=$iv_ruleSchemeCharacter.current; } 
	 EOF 
;

// Rule SchemeCharacter
ruleSchemeCharacter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#\\' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSchemeCharacterAccess().getNumberSignReverseSolidusKeyword_0());
    }
(
(
(
		lv_value_1_1=RULE_ID
		{
			newLeafNode(lv_value_1_1, grammarAccess.getSchemeCharacterAccess().getValueIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSchemeCharacterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_1, 
        		"ID");
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getSchemeCharacterAccess().getValueSpecialCharacterParserRuleCall_1_0_1()); 
	    }
		lv_value_1_2=ruleSpecialCharacter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchemeCharacterRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_2, 
        		"SpecialCharacter");
	        afterParserOrEnumRuleCall();
	    }

    |		lv_value_1_3=RULE_ANY_OTHER
		{
			newLeafNode(lv_value_1_3, grammarAccess.getSchemeCharacterAccess().getValueANY_OTHERTerminalRuleCall_1_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSchemeCharacterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_3, 
        		"ANY_OTHER");
	    }

)

)
))
;





// Entry rule entryRuleSchemeText
entryRuleSchemeText returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSchemeTextRule()); }
	 iv_ruleSchemeText=ruleSchemeText 
	 { $current=$iv_ruleSchemeText.current; } 
	 EOF 
;

// Rule SchemeText
ruleSchemeText returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getSchemeTextAccess().getValueSchemeTextValueParserRuleCall_0()); 
	    }
		lv_value_0_0=ruleSchemeTextValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchemeTextRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"SchemeTextValue");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleSchemeTextValue
entryRuleSchemeTextValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSchemeTextValueRule()); } 
	 iv_ruleSchemeTextValue=ruleSchemeTextValue 
	 { $current=$iv_ruleSchemeTextValue.current.getText(); }  
	 EOF 
;

// Rule SchemeTextValue
ruleSchemeTextValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSchemeTextValueAccess().getSchemeTextValueSegmentParserRuleCall_0()); 
    }
    this_SchemeTextValueSegment_0=ruleSchemeTextValueSegment    {
		$current.merge(this_SchemeTextValueSegment_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSchemeTextValueAccess().getColonKeyword_1_0()); 
    }
(
	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSchemeTextValueAccess().getColonKeyword_1_1()); 
    }
)?
    { 
        newCompositeNode(grammarAccess.getSchemeTextValueAccess().getSchemeTextValueSegmentParserRuleCall_1_2()); 
    }
    this_SchemeTextValueSegment_3=ruleSchemeTextValueSegment    {
		$current.merge(this_SchemeTextValueSegment_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*)
    ;





// Entry rule entryRuleSchemeTextValueSegment
entryRuleSchemeTextValueSegment returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSchemeTextValueSegmentRule()); } 
	 iv_ruleSchemeTextValueSegment=ruleSchemeTextValueSegment 
	 { $current=$iv_ruleSchemeTextValueSegment.current.getText(); }  
	 EOF 
;

// Rule SchemeTextValueSegment
ruleSchemeTextValueSegment returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='\\\\' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSchemeTextValueSegmentAccess().getReverseSolidusReverseSolidusKeyword_0()); 
    }

    |
	kw='=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSchemeTextValueSegmentAccess().getEqualsSignKeyword_1()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSchemeTextValueSegmentAccess().getHyphenMinusKeyword_2()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getSchemeTextValueSegmentAccess().getSpecialCharacterParserRuleCall_3()); 
    }
    this_SpecialCharacter_3=ruleSpecialCharacter    {
		$current.merge(this_SpecialCharacter_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSchemeTextValueSegmentAccess().getSpecialCommandNameParserRuleCall_4()); 
    }
    this_SpecialCommandName_4=ruleSpecialCommandName    {
		$current.merge(this_SpecialCommandName_4);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSchemeTextValueSegmentAccess().getSchemeIdentifierParserRuleCall_5()); 
    }
    this_SchemeIdentifier_5=ruleSchemeIdentifier    {
		$current.merge(this_SchemeIdentifier_5);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |    this_STRING_6=RULE_STRING    {
		$current.merge(this_STRING_6);
    }

    { 
    newLeafNode(this_STRING_6, grammarAccess.getSchemeTextValueSegmentAccess().getSTRINGTerminalRuleCall_6()); 
    }

    |    this_INT_7=RULE_INT    {
		$current.merge(this_INT_7);
    }

    { 
    newLeafNode(this_INT_7, grammarAccess.getSchemeTextValueSegmentAccess().getINTTerminalRuleCall_7()); 
    }

    |    this_ANY_OTHER_8=RULE_ANY_OTHER    {
		$current.merge(this_ANY_OTHER_8);
    }

    { 
    newLeafNode(this_ANY_OTHER_8, grammarAccess.getSchemeTextValueSegmentAccess().getANY_OTHERTerminalRuleCall_8()); 
    }
)
    ;





// Entry rule entryRuleSchemeIdentifier
entryRuleSchemeIdentifier returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getSchemeIdentifierRule()); } 
	 iv_ruleSchemeIdentifier=ruleSchemeIdentifier 
	 { $current=$iv_ruleSchemeIdentifier.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule SchemeIdentifier
ruleSchemeIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getSchemeIdentifierAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSchemeIdentifierAccess().getHyphenMinusKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getSchemeIdentifierAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleSchemeNumber
entryRuleSchemeNumber returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getSchemeNumberRule()); }
	 iv_ruleSchemeNumber=ruleSchemeNumber 
	 { $current=$iv_ruleSchemeNumber.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule SchemeNumber
ruleSchemeNumber returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSchemeNumberAccess().getRadixSchemeNumberRadixParserRuleCall_0_0()); 
	    }
		lv_radix_0_0=ruleSchemeNumberRadix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchemeNumberRule());
	        }
       		set(
       			$current, 
       			"radix",
        		lv_radix_0_0, 
        		"SchemeNumberRadix");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSchemeNumberAccess().getValueSignedIntegerParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleSignedInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchemeNumberRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"SignedInteger");
	        afterParserOrEnumRuleCall();
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleSchemeNumberRadix
entryRuleSchemeNumberRadix returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSchemeNumberRadixRule()); } 
	 iv_ruleSchemeNumberRadix=ruleSchemeNumberRadix 
	 { $current=$iv_ruleSchemeNumberRadix.current.getText(); }  
	 EOF 
;

// Rule SchemeNumberRadix
ruleSchemeNumberRadix returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='#' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSchemeNumberRadixAccess().getNumberSignKeyword_0()); 
    }
    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getSchemeNumberRadixAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleSignedInteger
entryRuleSignedInteger returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSignedIntegerRule()); } 
	 iv_ruleSignedInteger=ruleSignedInteger 
	 { $current=$iv_ruleSignedInteger.current.getText(); }  
	 EOF 
;

// Rule SignedInteger
ruleSignedInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignedIntegerAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getSignedIntegerAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleSchemeMarkupCommand
entryRuleSchemeMarkupCommand returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getSchemeMarkupCommandRule()); }
	 iv_ruleSchemeMarkupCommand=ruleSchemeMarkupCommand 
	 { $current=$iv_ruleSchemeMarkupCommand.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule SchemeMarkupCommand
ruleSchemeMarkupCommand returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
(	otherlv_0='#:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSchemeMarkupCommandAccess().getNumberSignColonKeyword_0());
    }
(
(
(
		lv_command_1_1=RULE_ID
		{
			newLeafNode(lv_command_1_1, grammarAccess.getSchemeMarkupCommandAccess().getCommandIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSchemeMarkupCommandRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"command",
        		lv_command_1_1, 
        		"ID");
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getSchemeMarkupCommandAccess().getCommandSpecialCommandNameParserRuleCall_1_0_1()); 
	    }
		lv_command_1_2=ruleSpecialCommandName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchemeMarkupCommandRule());
	        }
       		set(
       			$current, 
       			"command",
        		lv_command_1_2, 
        		"SpecialCommandName");
	        afterParserOrEnumRuleCall();
	    }

)

)
))
;
finally {
	myHiddenTokenState.restore();
}





RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_INT : ('0'..'9')+;

RULE_ID : ('a'..'z'|'A'..'Z'|'\u00A1'..'\uFFDC')+;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_SL_COMMENT : '%' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ML_COMMENT : '%{' ( options {greedy=false;} : . )*'%}';

RULE_SCHEME_SL_COMMENT : ';;' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_SCHEME_ML_COMMENT : '#!' ( options {greedy=false;} : . )*'!#';

RULE_ANY_OTHER : .;


